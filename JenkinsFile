pipeline{
	agent any
    tools {
      maven 'MVN_HOME'
      jdk "JDK11"
    }
	
	
    environment {
        DOCKER_HUB_CREDENTIALS = credentials('docker-hub-creds')
	ANSIBLE_HOST_KEY_CHECKING = 'False'
    }

    stages{
       stage('Maven Build') {
         steps {
			// print system information
		   sh "uname -a";
		   
		   // mvn build
		   echo 'start: mvn clean package'
           sh "mvn clean package"
		   
         }
		 
		 post {
		   always {
				echo "end: mvn clean package"
		   }
		   success {
				junit '**/target/surefire-reports/TEST-*.xml'
		   }
		 }
       }
       
        stage('Docker Build'){
            steps{
		sh "docker build -t jonathanefreilearning/tomcat_example .";
		// sh "sudo docker build -t jonathanefreilearning/tomcat_example .";
            }
        }
	stage('DockerHub Push') {
	    steps {
	        script {
	            docker.withRegistry('', 'docker-hub-creds') {
	                sh "docker push jonathanefreilearning/tomcat_example:latest"
	            }
	        }
	    }
	}

      stage('Docker Deploy'){
            steps{
		script{
			sh 'ssh-keyscan -H 192.168.0.34 >> ~/.ssh/known_hosts'
			sh "ansible-playbook -i inventory.ini deploy-docker.yml -l target"
		}	
            }
        }        
    }
    
}
